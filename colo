#!/bin/bash

function print_help {
    if [[ -z "$1" ]] ; then 
        echo "Usage: colo [MODE]
COmmand LOck: Create an environment for easier use of the same command multiple times

A command lock is a string. When running a command in the COLO environment, the command will be suspsituted inplace of all occurances of "{}" in the command lock.

Modes:
  -d [NAME]             Default, use the contents of ~/.colo/[NAME] as the command lock
  -c [COMMAND]          Use [COMMAND] as the command lock
  -f [PATH]             Use the contents of the file at [PATH] as the command lock
  -m [NAME] [COMMAND]   Make a file at ~/.colo/[NAME] with [COMMAND] as its content
  -h, --help [NAME]     Print the contents of ~/.colo/[NAME]
  -h, --help            Display this message
"
    else 
        cat ~/.colo/$1 ; echo ""
    fi
}

if [[ -z "$1" ]] ; then echo "No arguments given"; exit 1; fi

case "$1" in
-h) print_help $2 ; exit 0 ;;
--help) print_help $2 ; exit 0 ;;
-m) echo $3 > ~/.colo/$2 ; exit 0 ;;
-f) COLO=$(cat $2);;
-c) COLO=$2;;
-d) COLO=$(cat ~/.colo/$2);;
*) COLO=$(cat ~/.colo/$1);;
esac

while true
do
    echo -n "colo@$PWD> "
    read -t 100 INPUT

    if [[ $INPUT == !* ]] ;
    then
        CMD="${INPUT:1}"
        eval $CMD
    else
        CMD=$(echo $COLO | sed "s/{}/$INPUT/")
        eval $CMD
    fi
done
